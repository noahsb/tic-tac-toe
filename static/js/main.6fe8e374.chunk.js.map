{"version":3,"sources":["Components/Layout/Footer/Footer.tsx","Constants/Routes.ts","Components/Layout/Header/Header.tsx","Components/Layout/Layout/Layout.tsx","Components/Game/Square/Square.tsx","Components/Game/Board/Board.tsx","Components/Game/Game/Game.tsx","Components/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","href","ROUTES","ROOT","SOLO","Header","to","style","textDecoration","Layout","props","children","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","overflow","Game","currentBoard","xNext","useState","Array","fill","board","setBoard","xIsNext","setXisNext","isTie","setIsTie","winner","lines","length","a","b","c","calculateWinner","includes","boardCopy","slice","localStorage","setItem","JSON","stringify","removeItem","float","Home","route","history","useHistory","push","jsonBoard","getItem","jsonX","parse","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAOeA,EAPA,kBAEX,sDACmB,mBAAGC,KAAK,4BAAR,gCCHVC,EAAS,CAClBC,KAAM,IACNC,KAAM,SAGKF,ICOAG,EARA,kBACX,mCACI,cAAC,IAAD,CAAMC,GAAIJ,EAAOC,KAAMI,MAAO,CAACC,eAAgB,QAA/C,SACI,kDCOGC,EAXA,SAACC,GAEZ,OACI,gCACI,cAAC,EAAD,IACCA,EAAMC,SACP,cAAC,EAAD,QCHGC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQA,QAASA,EAAjB,SACKD,KCCHN,EAAQ,CACVQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWHC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASR,EAAZ,EAAYA,QAAZ,OACV,qBAAKP,MAAOA,EAAZ,SACKe,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCVnBlB,EAAQ,CACVS,MAAO,QACPE,OAAQ,YACRQ,SAAU,UAsECC,EAzCF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,MAAmB,EACnBC,mBAASF,GAA8BG,MAAM,GAAGC,KAAK,OADlC,mBACtCC,EADsC,KAC/BC,EAD+B,OAEfJ,mBAASD,IAAe,GAFT,mBAEtCM,EAFsC,KAE7BC,EAF6B,OAGnBN,oBAAS,GAHU,mBAGtCO,EAHsC,KAG/BC,EAH+B,KAIvCC,EAxBc,SAACjB,GAWrB,IAVA,IAAMkB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACnBe,EAAMf,GADa,GAC9BiB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KAOQG,CAAgBZ,GAwB/B,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAOX,QAASW,EAAOnB,QAxBf,SAACW,GAERQ,EAAMa,SAAS,OAAUP,GAC1BD,GAAS,GAEb,IAAIS,EAAYd,EAAMe,QAClBT,GAAUQ,EAAUtB,KACxBsB,EAAUtB,GAAKU,EAAU,IAAM,IAC/BD,EAASa,GACTX,GAAYD,GAEZc,aAAaC,QAAQ,QAASC,KAAKC,UAAUL,IAC7CE,aAAaC,QAAQ,QAASC,KAAKC,WAAWjB,QAa1C,sBAAK5B,MAAOA,EAAZ,UACI,wBAAQO,QAXD,WACfmC,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,SACxBnB,EAASH,MAAM,GAAGC,KAAK,OACvBM,GAAS,IAOD,sBAA8C,uBAC9C,mBAAG/B,MAAO,CAAC+C,MAAO,QAAlB,SAA4B,iBAAmBnB,EAAU,IAAM,OAC9DE,GAAS,mBAAG9B,MAAO,CAAC+C,MAAO,SAAlB,sBACTf,GAAU,mBAAGhC,MAAO,CAAC+C,MAAO,SAAlB,SAA6B,WAAaf,WCnE/DhC,EAAQ,CACVS,MAAO,OACPE,OAAQ,UAoBGqC,EAjBF,WAET,IAEoBC,EAFdC,EAAUC,cAMhB,OACI,cAAC,EAAD,UACI,qBAAKnD,MAAOA,EAAZ,SACI,wBAAQO,SAPA0C,EAOoBtD,EAAOE,KAPT,WAClCqD,EAAQE,KAAKH,KAML,4BCfZI,EAAYX,aAAaY,QAAQ,SACjCC,EAAQb,aAAaY,QAAQ,SAC7B5B,EAAsB,OAAd2B,EAAqBT,KAAKY,MAAMH,GAAa,KACrD/B,EAAkB,OAAViC,EAAiBX,KAAKY,MAAMD,GAAS,KAkBlCE,MAhBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAM/D,EAAOE,KACb8D,UAAW,kBACT,cAAC,EAAD,CAAMtC,aAAcK,EAAOJ,MAAOA,OAGtC,cAAC,IAAD,CAAOoC,KAAM/D,EAAOC,KAAM+D,UAAWX,UCP9BY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6fe8e374.chunk.js","sourcesContent":["const Footer = () => (\r\n\r\n    <h6>\r\n        Made with ‚ù§ by <a href=\"https://github.com/noahsb\">Noah Burroughs</a>\r\n    </h6>\r\n);\r\n\r\nexport default Footer;","export const ROUTES = {\r\n    ROOT: '/',\r\n    SOLO: '/solo',\r\n};\r\n\r\nexport default ROUTES;","import ROUTES from \"../../../Constants/Routes\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n    <>\r\n        <Link to={ROUTES.ROOT} style={{textDecoration: 'none'}}>\r\n            <h1>Tic-Tac-Toe</h1>\r\n        </Link>\r\n    </>\r\n);\r\n\r\nexport default Header;","import Footer from \"../Footer\";\r\nimport Header from \"../Header\";\r\n\r\nconst Layout = (props: any) => {\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {props.children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","const Square = ({ value, onClick }) => (\r\n    <button onClick={onClick}>\r\n        {value}\r\n    </button>\r\n);\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from '../Square/Square';\r\n\r\nconst style = {\r\n    borderRadius: '10px',\r\n    width: '300px',\r\n    height: '300px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n};\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n    <div style={style}>\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => onClick(i)} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Board;","import { useState } from 'react';\r\n\r\nimport Layout from '../../Layout/Layout';\r\nimport Board from '../Board/Board';\r\n\r\nconst style = {\r\n    width: '280px',\r\n    margin: '20px auto',\r\n    overflow: 'hidden'\r\n};\r\n\r\ninterface Props {\r\n    currentBoard: Array<string|null>\r\n    xNext: boolean\r\n}\r\n\r\n// calculateWinner borrowed/modified from ReactJS demo\r\nconst calculateWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [0, 3, 6],\r\n      [0, 4, 8],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [2, 4, 6],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst Game = ({ currentBoard, xNext }: Props) => {\r\n    const [board, setBoard] = useState(currentBoard ? currentBoard : Array(9).fill(null));\r\n    const [xIsNext, setXisNext] = useState(xNext? xNext : true);\r\n    const [isTie, setIsTie] = useState(false);\r\n    const winner = calculateWinner(board);\r\n\r\n    const onClick = (i) => {\r\n\r\n        if (!board.includes(null) && !winner) {\r\n            setIsTie(true);\r\n        }\r\n        let boardCopy = board.slice();\r\n        if (winner || boardCopy[i]) return;\r\n        boardCopy[i] = xIsNext ? 'X' : 'O';\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n\r\n        localStorage.setItem('board', JSON.stringify(boardCopy));\r\n        localStorage.setItem('xNext', JSON.stringify(!xIsNext));\r\n    }\r\n\r\n    const resetClick = () => {\r\n        localStorage.removeItem('board');\r\n        localStorage.removeItem('xNext');\r\n        setBoard(Array(9).fill(null));\r\n        setIsTie(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Board squares={board} onClick={onClick} />\r\n            <div style={style}>\r\n                <button onClick={resetClick}>New Game</button><br />\r\n                <p style={{float: 'left'}}>{'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\r\n                {isTie && <p style={{float: 'right'}}>Tie Game</p>}\r\n                {winner && <p style={{float: 'right'}}>{'Winner: ' + winner}</p>}\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Game;","import ROUTES from '../../Constants/Routes';\r\nimport Layout from '../Layout/Layout';\r\n\r\nimport { useHistory } from 'react-router-dom';  \r\n\r\nconst style = {\r\n    width: '80px',\r\n    margin: '0 auto',\r\n};\r\n\r\nconst Home = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const navigateTo = (route: string) => () => {\r\n        history.push(route);\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <div style={style}>\r\n                <button onClick={navigateTo(ROUTES.SOLO)}>Play Game</button>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Game from './Components/Game/Game/Game';\nimport Home from './Components/Home';\nimport { ROUTES } from './Constants/Routes';\n\nlet jsonBoard = localStorage.getItem('board');\nlet jsonX = localStorage.getItem('xNext');\nlet board = jsonBoard !== null ? JSON.parse(jsonBoard) : null;\nlet xNext = jsonX !== null ? JSON.parse(jsonX) : null;\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route \n          path={ROUTES.SOLO}\n          component={() =>\n            <Game currentBoard={board} xNext={xNext} />\n          } \n        />\n        <Route path={ROUTES.ROOT} component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}